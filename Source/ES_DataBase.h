//ÃŒƒ”À‹ ¡¿«€ «Õ¿Õ»…
#include "Header.h"

class Items {
	string Model;
	int Cost;
public:
	Items() {};
	Items(string m) : Model(m) {};
	struct data {
		ofstream* file;
		int id;
	};
	virtual void Get(int) = 0;
	virtual void Add() = 0;
	virtual void Info() = 0;
	void SetModel(string model) { Model = model; };
	void SetCost(int cost) { Cost = cost; };
	string GetModel() { return Model; };
	int GetCost() { return Cost; };
	ifstream EDIT(string, int);
	int GETID(string);
};

////////////////////////////////////////////////////////////////////////////////////////////////
//     Ã¿“≈–»Õ— ¿ﬂ  œÀ¿“¿     //////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

class MBoard: public Items {
public:
	string FormFactor;
	string Soket;
	string Chipset;
	string MemType;
	string MemFF;
	int MemSlots;
	int MemFreq;
	int PCI_Ex16;

	MBoard() {};
	void Get(int);
	void Add();
	void Info();
};

////////////////////////////////////////////////////////////////////////////////////////////////
//        ¡ÀŒ » œ»“¿Õ»        //////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

class EBlock: public Items {
public:
	string FormFactor;
	string Sertif;
	int Power;
	string MBPower;
	string VCPower;
	int pin_SATA;
	string CSystem;

	EBlock() {};
	void Get(int);
	void Add();
	void Info();
};

/////////////////////////////////////////////////////////////////////////////////////////////////
//          œ–Œ÷≈——Œ–          //////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

class Processor:public Items {
public:
	string Soket;
	string Core;
	int Cache;
	int Core_Num;
	int Flows_Num;
	int Freq;
	string MemType;

	Processor() {};
	void Get(int);
	void Add();
	void Info();
};

/////////////////////////////////////////////////////////////////////////////////////////////////    
//          ¬≈Õ“»Àﬂ“Œ–€        //////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

class Fan :public Items {
	int Power;
	string VPower;
	int Speed;

public:
	Fan() {};
	void Get(int);
	void Add();
	void Info();
};

/////////////////////////////////////////////////////////////////////////////////////////////////    
//          Œœ≈–¿“»¬Õ¿ﬂ        //////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

class RAM: public Items {
public:
	string MemType;
	string FormFactor;
	int Capacity;
	int Freq;

	RAM() {};
	void Get(int);
	void Add();
	void Info();
};

/////////////////////////////////////////////////////////////////////////////////////////////////
//         ∆®—“ »… ƒ»—         //////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

class HDD :public Items {
public:
	int Capacity;
	int RSpeed;
	int DSpeed;
	int Cache;
	string Interface;

	HDD() {};
	void Get(int);
	void Add();
	void Info();
};

class SSD :public Items {
public:
	int Capacity;
	int Speed;
	string TypeChipMem;
	string Interface;

	SSD() {};
	void Get(int);
	void Add();
	void Info();
};

/////////////////////////////////////////////////////////////////////////////////////////////////
//         ¬»ƒ≈Œ ¿–“¿          //////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

class VCard :public Items {
public:
	string GPU;
	int GPUFreq;
	int Capacity;
	string MemType;
	int MemFreq;
	int Pitanie;
	int PConsuming;
	int PB;

	VCard() {};
	void Get(int);
	void Add();
	void Info();
};

/////////////////////////////////////////////////////////////////////////////////////////////////
//           œ–»Õ“≈–           //////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

class Printer :public Items {
public:
	string PColor;
	string Copy;

	Printer() {};
	void Get(int);
	void Add();
	void Info();
};

/////////////////////////////////////////////////////////////////////////////////////////////////
//            Œ–œ”—           ///////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

struct mbff {
	string fst;
	string sec;
	string third;
	string fourth;
	string fifth;
};

class Box :public Items {
public:
	mbff MBFF;
	string PBFF;

	Box() {};
	void Get(int);
	void Add();
	void Info();
};

/////////////////////////////////////////////////////////////////////////////////////////////////
//      «Õ¿Õ»ﬂ » œ–¿¬»À¿      ///////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

struct SBORKA {
	MBoard mb;
	EBlock eb;
	Processor proc;
	Fan fan;
	HDD hdd;
	SSD ssd;
	VCard vc;
	Printer prnt;
	Box box;
	RAM ram;
	int Budjet;
};

class FACT {
public:
	string name;
	string q;
	string i;
	vector<string> list;

	void Set(string);
	void Get(int);
	void Info();
};

class RULE {
public:
	string from;
	string to;

	void Set(string);
	void Info();
	void Get(int);
};

/////////////////////////////////////////////////////////////////////////////////////////////////
//    Œ¡⁄ﬂ¬À≈Õ»ﬂ Õ≈ -’ ‘-…    ///////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

vector <MBoard> GetMBList(MBoard);
vector <EBlock>  GetEBList(EBlock);
vector <Processor> GetProcList(Processor);
vector <Fan> GetFanList(Fan);
vector <RAM> GetRAMList(RAM);
vector <HDD> GetHDDList(HDD);
vector <SSD> GetSSDList(SSD);
vector <VCard> GetVCardList(VCard);
vector <Printer> GetPRList(Printer);
vector <Box> GetBOXList(Box);
template<typename t> void Quick_Sort_Func(vector<t>&, int);
template<typename t> void Sort(t&);
void ConfigFst(int);
void ConfigSec(int);
void ConfigThrd(int);
void CompleteMes();
void WARNING();